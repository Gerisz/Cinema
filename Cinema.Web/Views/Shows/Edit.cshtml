@using Cinema.Data.Models.Tables.Enums
@model SeatReserve

<h1>Helyfoglalás</h1>
@{
    var title = ViewData["Title"]!.ToString();
    var start = ViewData["Start"]!.ToString();
}
<h4>@Html.DisplayFor(_ => title) - @Html.DisplayFor(_ => start)</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm("Edit"))
        {
            @Html.HiddenFor(m => m.ShowId)
            <div class="row g-2">
                <div class="col-md-6 form-floating">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.LabelFor(m => m.Name)
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 form-floating">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.LabelFor(m => m.PhoneNumber)
                    @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <table class="seat-table table">
                <tbody>
                    @{
                        var rowCount = Model.HallSize.RowCount;
                        var columnCount = Model.HallSize.ColumnCount;
                    }
                    @for (Int32 i = 0; i < rowCount; i++)
                    {
                        <tr>
                            <td>
                                <b>@(i + 1)</b>
                            </td>
                            @for (Int32 j = 0; j < columnCount; j++)
                            {
                                var index = i * columnCount + j;
                                <td>
                                    @Html.HiddenFor(m => m.Seats[index].Id)
                                    @Html.CheckBoxFor(m => m.Seats[index].ToReserve,
                                             Model.Seats[index].Reserved
                                             ? new
                                             {
                                                 @class = "btn-check",
                                                 @disabled = ""
                                             }
                                             : new
                                             {
                                                 @class = "btn-check seat",
                                                 @onclick = "checkSeats()"
                                             })
                                    @Html.LabelFor(m => m.Seats[index].ToReserve,
                                             (j + 1).ToString(),
                                             new
                                             {
                                                 @class = "btn btn-outline-" +
                                             (Model.Seats[index].Reserved ? "secondary" : "dark")
                                             })
                                </td>
                            }
                            <td>
                                <b>@(i + 1)</b>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <div class="row form-group">
                <div class="col-md-6">
                    @Html.ActionLink("Vissza a mai műsorajánlathoz", "Index", "Movies",
                             new(), new { @class = "btn btn-secondary" })
                </div>
                <div class="col-md-6">
                    <input type="submit" value="Helyfoglalás véglegesítése"
                           class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>

<script src="~/js/showsEdit.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
